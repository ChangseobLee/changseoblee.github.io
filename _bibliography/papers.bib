---
---

@inproceedings{kim2021hammerfilter,
  abbr = {ICCD},
  bibtex_show = {true},
  title={HammerFilter: Robust Protection and Low Hardware Overhead Method for RowHammer}, 
  author={Kim, Kwangrae and Woo, Jeonghyun and Kim, Junsu and Chung, Ki-Seok},
  booktitle={2021 IEEE 39th International Conference on Computer Design (ICCD)}, 
  year={2021},
  pages={212-219},
  abstract={The continuous scaling-down of the dynamic random access memory (DRAM) manufacturing process has made it possible to improve DRAM density. However, it makes small DRAM cells susceptible to electromagnetic interference between nearby cells. Unless DRAM cells are adequately isolated from each other, the frequent switching access of some cells may lead to unintended bit flips in adjacent cells. This phenomenon is commonly referred to as RowHammer. It is often considered a security issue because unusually frequent accesses to a small set of rows generated by malicious attacks can cause bit flips. Such bit flips may also be caused by general applications. Although several solutions have been proposed, most approaches either incur excessive area overhead or exhibit limited prevention capabilities against maliciously crafted attack patterns. Therefore, the goals of this study are (1) to mitigate RowHammer, even when the number of aggressor rows increases and attack patterns become complicated, and (2) to implement the method with a low area overhead.We propose a robust hardware-based protection method for RowHammer attacks with a low hardware cost called HammerFilter, which employs a modified version of the counting bloom filter. It tracks all attacking rows efficiently by leveraging the fact that the counting bloom filter is a space-efficient data structure, and we add an operation, HALF-DELETE, to mitigate the energy overhead. According to our experimental results, the proposed method can completely prevent bit flips when facing artificially crafted attack patterns (five patterns in our experiments), whereas state-of-the-art probabilistic solutions can only mitigate less than 56% of bit flips on average. Furthermore, the proposed method has a much lower area cost compared to existing counter-based solutions (40.6&#x00D7; better than TWiCe and 2.3&#x00D7; better than Graphene).},
  doi={10.1109/ICCD53106.2021.00043},
  ISSN={2576-6996},
  kind = {conference},
  selected = {true},
  pdf = {21iccd_HammerFilter.pdf},
  html = {https://ieeexplore.ieee.org/abstract/document/9643804},
  slides = {21iccd_HammerFilter_slides.pptx},
  video = {https://www.youtube.com/watch?v=X_O8YaOSKLE}
}


@inproceedings{dachammerfilter,
  abbr = {DAC},
  title={HammerFilter: Robust Protection and Low Hardware Overhead Method for Row-Hammering}, 
  author={Kim, Kwangrae and Kim, Junsu and Woo, Jeonghyun and Chung, Ki-Seok},
  booktitle={2021 58th ACM/IEEE Design Automation Conference (DAC)}, 
  year={2021},
  kind = {poster},
  poster = {21dac_HammerFilter_poster.pdf},
}

@inproceedings{dachammerfilter,
  abbr = {KICS},
  title={A Method to Find the Optimal Probability for Probability-driven Additional Row Refresh to Prevent DRAM Row Hammering}, 
  author={Woo, Jeonghyun and Chung, Ki-Seok},
  booktitle={The Korean Institute of Communications and Information Sciences Winter Conference}, 
  year={2019},
  kind = {domestic},
}

@inproceedings{dachammerfilter,
  abbr = {KICS},
  title={Implementation of an FPGA-based CNN Accelerator using SDSoC}, 
  author={Lee*, Changwoo and Woo*, Jeonghyun and Chung, Ki-Seok},
  booktitle={The Korean Institute of Communications and Information Sciences Fall Conference}, 
  year={2017},
  kind = {domestic},
  code = {https://github.com/changwoolee/lenet5_hls},
}